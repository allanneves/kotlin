A/Users/aneves/dev/kotlin/src/main/kotlin/classes/PracticeThree.ktQ/Users/aneves/dev/kotlin/src/main/kotlin/packages/com/organisation/hello/Hello.ktA/Users/aneves/dev/kotlin/src/main/kotlin/polymorphism/Exercise.ktF/Users/aneves/dev/kotlin/src/main/kotlin/extensions/CompanionObject.kt?/Users/aneves/dev/kotlin/src/main/kotlin/scope/InternalScope.ktL/Users/aneves/dev/kotlin/src/main/kotlin/generics/TypeConstraintsPractice.ktG/Users/aneves/dev/kotlin/src/main/kotlin/ifconditional/IfConditional.ktA/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/Coroutines.ktE/Users/aneves/dev/kotlin/src/main/kotlin/breakandcontinue/Continue.kt?/Users/aneves/dev/kotlin/src/main/kotlin/classes/PracticeOne.ktI/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/MultipleInterfaces.kt?/Users/aneves/dev/kotlin/src/main/kotlin/exceptions/TryCatch.kt;/Users/aneves/dev/kotlin/src/main/kotlin/forloop/ForLoop.kt</Users/aneves/dev/kotlin/src/main/kotlin/basics/Variables.ktK/Users/aneves/dev/kotlin/src/main/kotlin/lambdafunctions/LambdaFunctions.ktC/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/Apply.ktN/Users/aneves/dev/kotlin/src/main/kotlin/extensions/CompanionObjectExercise.ktC/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/ExerciseOne.ktH/Users/aneves/dev/kotlin/src/main/kotlin/extensions/FunctionsExercise.ktJ/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/WithPractice.kt>/Users/aneves/dev/kotlin/src/main/kotlin/basics/Nullability.kt=/Users/aneves/dev/kotlin/src/main/kotlin/basics/ResultType.kt=/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/Super.ktH/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/TakeUnless.ktA/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/Run.ktF/Users/aneves/dev/kotlin/src/main/kotlin/exceptions/TryCatchFinally.ktE/Users/aneves/dev/kotlin/src/main/kotlin/lateinit/LateInitPractice.ktD/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/PracticeThree.kt>/Users/aneves/dev/kotlin/src/main/kotlin/whileloop/Practice.kt</Users/aneves/dev/kotlin/src/main/kotlin/collections/List.ktN/Users/aneves/dev/kotlin/src/main/kotlin/lambdafunctions/HighOrderFunctions.ktC/Users/aneves/dev/kotlin/src/main/kotlin/collections/Collections.ktK/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/ScopePractice.ktK/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/ApplyExercise.ktA/Users/aneves/dev/kotlin/src/main/kotlin/constructors/Practice.ktB/Users/aneves/dev/kotlin/src/main/kotlin/sealedclasses/Practice.ktN/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/FunctionOverload.kt:/Users/aneves/dev/kotlin/src/main/kotlin/basics/Numbers.ktB/Users/aneves/dev/kotlin/src/main/kotlin/breakandcontinue/Break.ktH/Users/aneves/dev/kotlin/src/main/kotlin/expressions/BooleanFunctions.kt?/Users/aneves/dev/kotlin/src/main/kotlin/collections/HashMap.ktK/Users/aneves/dev/kotlin/src/main/kotlin/whenconditional/WhenConditional.kt@/Users/aneves/dev/kotlin/src/main/kotlin/enumclasses/Practice.ktD/Users/aneves/dev/kotlin/src/main/kotlin/collections/SetFunctions.ktE/Users/aneves/dev/kotlin/src/main/kotlin/constructors/Constructors.kt=/Users/aneves/dev/kotlin/src/main/kotlin/lazy/LazyExercise.kt?/Users/aneves/dev/kotlin/src/main/kotlin/tictactoe/TicTacToe.ktJ/Users/aneves/dev/kotlin/src/main/kotlin/expressions/LogicalExpressions.kt@/Users/aneves/dev/kotlin/src/main/kotlin/abstraction/Exercise.ktV/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/FunctionOverloadPractice.kt@/Users/aneves/dev/kotlin/src/main/kotlin/expressions/Practice.kt=/Users/aneves/dev/kotlin/src/main/kotlin/scope/PublicScope.ktA/Users/aneves/dev/kotlin/src/main/kotlin/expressions/InKeyword.ktF/Users/aneves/dev/kotlin/src/main/kotlin/gettersandsetters/Exercise.ktE/Users/aneves/dev/kotlin/src/main/kotlin/generics/GenericsExercise.ktG/Users/aneves/dev/kotlin/src/main/kotlin/nestedclasses/NestedClasses.ktF/Users/aneves/dev/kotlin/src/main/kotlin/gettersandsetters/Practice.kt?/Users/aneves/dev/kotlin/src/main/kotlin/whileloop/WhileLoop.ktF/Users/aneves/dev/kotlin/src/main/kotlin/basics/ArithmeticOperators.ktD/Users/aneves/dev/kotlin/src/main/kotlin/functions/partone/Return.ktE/Users/aneves/dev/kotlin/src/main/kotlin/generics/GenericsPractice.ktL/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/TakeIfPractice.ktA/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/Interfaces.kt;/Users/aneves/dev/kotlin/src/main/kotlin/collections/Set.ktH/Users/aneves/dev/kotlin/src/main/kotlin/functions/partone/Parameters.ktE/Users/aneves/dev/kotlin/src/main/kotlin/ifconditional/ShortHandIf.kt:/Users/aneves/dev/kotlin/src/main/kotlin/scope/Exercise.ktG/Users/aneves/dev/kotlin/src/main/kotlin/companionobject/PracticeOne.ktT/Users/aneves/dev/kotlin/src/main/kotlin/lambdafunctions/CommonHighOrderFunctions.ktB/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/Overriding.ktL/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/TakeIfExercise.kt:/Users/aneves/dev/kotlin/src/main/kotlin/basics/Strings.ktI/Users/aneves/dev/kotlin/src/main/kotlin/lambdafunctions/PracticeThree.ktG/Users/aneves/dev/kotlin/src/main/kotlin/lambdafunctions/PracticeOne.ktO/Users/aneves/dev/kotlin/src/main/kotlin/gettersandsetters/GettersAndSetters.ktB/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/PracticeTwo.ktM/Users/aneves/dev/kotlin/src/main/kotlin/packages/com/organisation/run/Run.kt:/Users/aneves/dev/kotlin/src/main/kotlin/scope/Practice.ktD/Users/aneves/dev/kotlin/src/main/kotlin/collections/MapFunctions.ktF/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/InterfaceValues.kt?/Users/aneves/dev/kotlin/src/main/kotlin/collections/HashSet.ktC/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/PracticeTwo.ktA/Users/aneves/dev/kotlin/src/main/kotlin/collections/ArrayList.kt</Users/aneves/dev/kotlin/src/main/kotlin/classes/Exercise.kt</Users/aneves/dev/kotlin/src/main/kotlin/forloop/Practice.kt;/Users/aneves/dev/kotlin/src/main/kotlin/objects/Objects.ktI/Users/aneves/dev/kotlin/src/main/kotlin/tictactoe/TicTacToeBruteForce.ktL/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/LocalFunctions.ktA/Users/aneves/dev/kotlin/src/main/kotlin/extensions/Properties.ktA/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/Let.ktP/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/TakeUnlessPractice.ktD/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/VarArg.ktL/Users/aneves/dev/kotlin/src/main/kotlin/polymorphism/DynamicPolymorphism.ktB/Users/aneves/dev/kotlin/src/main/kotlin/basics/TypeConversions.ktB/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/ExerciseTwo.ktE/Users/aneves/dev/kotlin/src/main/kotlin/breakandcontinue/Practice.kt>/Users/aneves/dev/kotlin/src/main/kotlin/casting/IsOperator.ktC/Users/aneves/dev/kotlin/src/main/kotlin/enumclasses/EnumClasses.kt>/Users/aneves/dev/kotlin/src/main/kotlin/initblock/Exercise.kt@/Users/aneves/dev/kotlin/src/main/kotlin/basics/ElvisOperator.ktC/Users/aneves/dev/kotlin/src/main/kotlin/basics/LogicalOperators.ktC/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/Inheritance.ktL/Users/aneves/dev/kotlin/src/main/kotlin/generics/TypeConstraintsExercise.ktG/Users/aneves/dev/kotlin/src/main/kotlin/sealedclasses/SealedClasses.kt@/Users/aneves/dev/kotlin/src/main/kotlin/extensions/Functions.ktF/Users/aneves/dev/kotlin/src/main/kotlin/basics/ComparisonOperators.ktD/Users/aneves/dev/kotlin/src/main/kotlin/basics/NonNullAssertions.kt@/Users/aneves/dev/kotlin/src/main/kotlin/classes/InnerObjects.kt;/Users/aneves/dev/kotlin/src/main/kotlin/collections/Map.ktC/Users/aneves/dev/kotlin/src/main/kotlin/abstraction/Abstraction.ktJ/Users/aneves/dev/kotlin/src/main/kotlin/collections/ArrayListFunctions.ktJ/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/WithExercise.ktB/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/Also.ktE/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/PracticeThree.ktH/Users/aneves/dev/kotlin/src/main/kotlin/extensions/FunctionsPractice.ktO/Users/aneves/dev/kotlin/src/main/kotlin/basics/ImplicitAndExplicitVariables.ktB/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/BestExample.ktN/Users/aneves/dev/kotlin/src/main/kotlin/extensions/CompanionObjectPractice.kt=/Users/aneves/dev/kotlin/src/main/kotlin/generics/Generics.kt?/Users/aneves/dev/kotlin/src/main/kotlin/classes/PracticeTwo.kt@/Users/aneves/dev/kotlin/src/main/kotlin/scope/ProtectedScope.ktC/Users/aneves/dev/kotlin/src/main/kotlin/dataclasses/DataClasses.ktA/Users/aneves/dev/kotlin/src/main/kotlin/constructors/Exercise.ktG/Users/aneves/dev/kotlin/src/main/kotlin/abstraction/AbstractMethods.kt5/Users/aneves/dev/kotlin/src/main/kotlin/lazy/Lazy.ktC/Users/aneves/dev/kotlin/src/main/kotlin/thiskeyword/ThisKeyword.kt@/Users/aneves/dev/kotlin/src/main/kotlin/basics/NullOperators.kt@/Users/aneves/dev/kotlin/src/main/kotlin/dataclasses/Practice.kt;/Users/aneves/dev/kotlin/src/main/kotlin/hangman/Hangman.ktA/Users/aneves/dev/kotlin/src/main/kotlin/forloop/NestedForLoop.ktE/Users/aneves/dev/kotlin/src/main/kotlin/lateinit/LateInitExercise.kt;/Users/aneves/dev/kotlin/src/main/kotlin/basics/Booleans.ktK/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/ApplyPractice.kt</Users/aneves/dev/kotlin/src/main/kotlin/exceptions/Throw.kt=/Users/aneves/dev/kotlin/src/main/kotlin/lazy/LazyPractice.kt=/Users/aneves/dev/kotlin/src/main/kotlin/lateinit/LateInit.ktB/Users/aneves/dev/kotlin/src/main/kotlin/sealedclasses/Exercise.kt9/Users/aneves/dev/kotlin/src/main/kotlin/basics/Random.kt@/Users/aneves/dev/kotlin/src/main/kotlin/enumclasses/Exercise.ktB/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/With.ktD/Users/aneves/dev/kotlin/src/main/kotlin/whenconditional/Practice.kt;/Users/aneves/dev/kotlin/src/main/kotlin/casting/Casting.ktK/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/InterfaceInheritance.ktA/Users/aneves/dev/kotlin/src/main/kotlin/polymorphism/Practice.kt@/Users/aneves/dev/kotlin/src/main/kotlin/abstraction/Practice.ktC/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/ExerciseTwo.ktF/Users/aneves/dev/kotlin/src/main/kotlin/functions/partone/Function.ktC/Users/aneves/dev/kotlin/src/main/kotlin/breakandcontinue/Labels.kt@/Users/aneves/dev/kotlin/src/main/kotlin/thiskeyword/Exercise.ktB/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/PracticeOne.kt?/Users/aneves/dev/kotlin/src/main/kotlin/initblock/InitBlock.kt;/Users/aneves/dev/kotlin/src/main/kotlin/classes/Classes.ktG/Users/aneves/dev/kotlin/src/main/kotlin/functions/partone/Challenge.ktH/Users/aneves/dev/kotlin/src/main/kotlin/collections/HashSetFunctions.ktB/Users/aneves/dev/kotlin/src/main/kotlin/nestedclasses/Exercise.ktB/Users/aneves/dev/kotlin/src/main/kotlin/interfaces/ExerciseOne.ktB/Users/aneves/dev/kotlin/src/main/kotlin/nestedclasses/Practice.ktI/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/RunExercise.ktC/Users/aneves/dev/kotlin/src/main/kotlin/ifconditional/CascadeIf.ktS/Users/aneves/dev/kotlin/src/main/kotlin/packages/com/organisation/client/Client.ktD/Users/aneves/dev/kotlin/src/main/kotlin/companionobject/Exercise.kt@/Users/aneves/dev/kotlin/src/main/kotlin/dataclasses/Exercise.ktI/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/RunPractice.kt</Users/aneves/dev/kotlin/src/main/kotlin/basics/Constants.ktD/Users/aneves/dev/kotlin/src/main/kotlin/generics/TypeConstraints.ktS/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/LocalFunctionPractice.ktB/Users/aneves/dev/kotlin/src/main/kotlin/ifconditional/Practice.ktD/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/TakeIf.kt>/Users/aneves/dev/kotlin/src/main/kotlin/scope/PrivateScope.ktI/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/LetPractice.ktK/Users/aneves/dev/kotlin/src/main/kotlin/polymorphism/StaticPolymorphism.ktI/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/LetExercise.ktC/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/Scope.ktJ/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/AlsoPractice.ktC/Users/aneves/dev/kotlin/src/main/kotlin/casting/CastingPractice.ktJ/Users/aneves/dev/kotlin/src/main/kotlin/standardfunctions/AlsoExercise.ktF/Users/aneves/dev/kotlin/src/main/kotlin/functions/partone/Practice.ktK/Users/aneves/dev/kotlin/src/main/kotlin/companionobject/CompanionObject.ktG/Users/aneves/dev/kotlin/src/main/kotlin/lambdafunctions/PracticeTwo.ktL/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/VarArgPractice.ktC/Users/aneves/dev/kotlin/src/main/kotlin/inheritance/PracticeOne.kt</Users/aneves/dev/kotlin/src/main/kotlin/basics/UserInput.ktF/Users/aneves/dev/kotlin/src/main/kotlin/functions/parttwo/Exercise.kt>/Users/aneves/dev/kotlin/src/main/kotlin/exceptions/Finally.ktE/Users/aneves/dev/kotlin/src/main/kotlin/collections/ListFunctions.ktG/Users/aneves/dev/kotlin/src/main/kotlin/companionobject/PracticeTwo.ktC/Users/aneves/dev/kotlin/src/main/kotlin/casting/CastingExercise.kt=/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/Scopes.kt>/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/Context.ktI/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/SuspendedFunctions.kt;/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/Jobs.ktG/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/SuspendFunctions.ktC/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/JobHierarchy.ktB/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/Dispatchers.ktD/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/JobsHierarchy.kt</Users/aneves/dev/kotlin/src/main/kotlin/coroutines/Async.ktB/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/WithContext.ktH/Users/aneves/dev/kotlin/src/main/kotlin/coroutines/ExceptionHandling.kt                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               